test20-status-after-commit: ERROR (incorrect output)
    Error on line 7 of test20-status-after-commit.in
-------------------- test20-status-after-commit.in --------------------
1. # Check that commit clears the staging area.
2. I setup2.inc
3. I blank-status.inc
4. > rm f.txt
5. <<<
6. > commit "Removed f.txt"
7. <<<
8. I blank-status.inc
-----------------------------------------------------------------------
-------------------- setup2.inc --------------------
1. # Set up one commit with two files.
2. I setup1.inc
3. > commit "Two files"
4. <<<
----------------------------------------------------
-------------------- setup1.inc --------------------
1. # Initialize and add two files.
2. I prelude1.inc
3. + f.txt wug.txt
4. + g.txt notwug.txt
5. > add g.txt
6. <<<
7. > add f.txt
8. <<<
----------------------------------------------------
-------------------- prelude1.inc --------------------
1. # Standard commands and definitions
2. > init
3. <<<
4. D DATE "Date: \w\w\w \w\w\w \d+ \d\d:\d\d:\d\d \d\d\d\d [-+]\d\d\d\d"
5. # A status log header RE.  Captures the commit id in its sole group.
6. D COMMIT_HEAD "commit ([a-f0-9]+)[ \t]*\n(?:Merge:\s+[0-9a-f]{7}\s+[0-9a-f]{7}[ ]*\n)?${DATE}"
7. # A full log entry.  Captures the entry. Assume logs messages don't contain
8. # "==="
9. D COMMIT_LOG "(===[ ]*\ncommit [a-f0-9]+[ ]*\n(?:Merge:\s+[0-9a-f]{7}\s+[0-9a-f]{7}[ ]*\n)?${DATE}[ ]*\n(?:.|\n)*?(?=\Z|\n===))"
10. # An arbitrary line of text (works even with ?s)
11. D ARBLINE "[^\n]*(?=\n|\Z)"
12. # Zero or more arbitrary full lines of text.
13. D ARBLINES "(?:(?:.|\n)*(?:\n|\Z)|\A|\Z)"
------------------------------------------------------
-------------------- blank-status.inc --------------------
1. > status
2. === Branches ===
3. *master
4.
5. === Staged Files ===
6.
7. === Removed Files ===
8.
9. === Modifications Not Staged For Commit ===
10.
11. === Untracked Files ===
12.
13. <<<
-------------------------------